using Mirror;
using UnityEngine;

public class PlayerController : NetworkBehaviour
{
    public float moveSpeed = 5f;
    public float lookSpeed = 2f;
    public GameObject gun;  // Reference to the gun object
    public Transform gunTransform;  // Reference to gun's transform

    private Camera playerCamera;
    private Vector3 moveDirection;

    void Start()
    {
        if (isLocalPlayer)
        {
            playerCamera = Camera.main;
            Cursor.lockState = CursorLockMode.Locked;
            Cursor.visible = false;
        }
    }

    void Update()
    {
        if (isLocalPlayer)
        {
            HandleMovement();
            HandleLook();
            HandleShooting();
        }
    }

    void HandleMovement()
    {
        float horizontal = Input.GetAxis("Horizontal");
        float vertical = Input.GetAxis("Vertical");

        moveDirection = new Vector3(horizontal, 0, vertical).normalized;

        transform.Translate(moveDirection * moveSpeed * Time.deltaTime, Space.World);
    }

    void HandleLook()
    {
        float mouseX = Input.GetAxis("Mouse X");
        float mouseY = Input.GetAxis("Mouse Y");

        transform.Rotate(Vector3.up * mouseX * lookSpeed);
        playerCamera.transform.Rotate(Vector3.left * mouseY * lookSpeed);
    }

    void HandleShooting()
    {
        if (Input.GetMouseButtonDown(0)) // Left mouse button
        {
            CmdFireGun();
        }
    }

    [Command]
    void CmdFireGun()
    {
        RpcFireGun();
    }

    [ClientRpc]
    void RpcFireGun()
    {
        if (isLocalPlayer)
        {
            // Shooting logic (example: play animation, instantiate bullet)
            Debug.Log("Fire!");
        }
    }
}

